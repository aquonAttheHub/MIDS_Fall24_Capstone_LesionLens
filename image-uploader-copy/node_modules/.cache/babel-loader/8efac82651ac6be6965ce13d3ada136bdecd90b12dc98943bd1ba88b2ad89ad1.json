{"ast":null,"code":"var _jsxFileName = \"/Users/induabhilash/image-uploader/src/pages/LesionLens.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LesionLens() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedImage(event.target.files[0]);\n    }\n  };\n  const handleSave = () => {\n    if (selectedImage) {\n      console.log(\"Image saved:\", selectedImage);\n      alert(\"Image saved successfully!\");\n    } else {\n      alert(\"Please upload an image first.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lesion Lens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(selectedImage),\n        alt: \"Preview\",\n        style: {\n          maxWidth: '300px',\n          maxHeight: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px'\n      },\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(LesionLens, \"gNHFCSJ3h3sH8HFrpxN7hUqoxHs=\");\n_c = LesionLens;\nexport default LesionLens;\nvar _c;\n$RefreshReg$(_c, \"LesionLens\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LesionLens","_s","selectedImage","setSelectedImage","handleImageChange","event","target","files","handleSave","console","log","alert","style","display","flexDirection","alignItems","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","margin","src","URL","createObjectURL","alt","maxWidth","maxHeight","onClick","fontSize","_c","$RefreshReg$"],"sources":["/Users/induabhilash/image-uploader/src/pages/LesionLens.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction LesionLens() {\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const handleImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedImage(event.target.files[0]);\n    }\n  };\n\n  const handleSave = () => {\n    if (selectedImage) {\n      console.log(\"Image saved:\", selectedImage);\n      alert(\"Image saved successfully!\");\n    } else {\n      alert(\"Please upload an image first.\");\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', padding: '50px' }}>\n      <h1>Lesion Lens</h1>\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n      {selectedImage && (\n        <div style={{ margin: '20px' }}>\n          <img\n            src={URL.createObjectURL(selectedImage)}\n            alt=\"Preview\"\n            style={{ maxWidth: '300px', maxHeight: '300px' }}\n          />\n        </div>\n      )}\n      <button onClick={handleSave} style={{ padding: '10px 20px', fontSize: '16px' }}>\n        Save\n      </button>\n    </div>\n  );\n}\n\nexport default LesionLens;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACnC,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/CJ,gBAAgB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIN,aAAa,EAAE;MACjBO,OAAO,CAACC,GAAG,CAAC,cAAc,EAAER,aAAa,CAAC;MAC1CS,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,MAAM;MACLA,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKa,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9FlB,OAAA;MAAAkB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEpB;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClEnB,aAAa,iBACZH,OAAA;MAAKa,KAAK,EAAE;QAAEa,MAAM,EAAE;MAAO,CAAE;MAAAR,QAAA,eAC7BlB,OAAA;QACE2B,GAAG,EAAEC,GAAG,CAACC,eAAe,CAAC1B,aAAa,CAAE;QACxC2B,GAAG,EAAC,SAAS;QACbjB,KAAK,EAAE;UAAEkB,QAAQ,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAQ;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eACDtB,OAAA;MAAQiC,OAAO,EAAExB,UAAW;MAACI,KAAK,EAAE;QAAEI,OAAO,EAAE,WAAW;QAAEiB,QAAQ,EAAE;MAAO,CAAE;MAAAhB,QAAA,EAAC;IAEhF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACpB,EAAA,CApCQD,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAsCnB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}